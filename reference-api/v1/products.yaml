openapi: 3.0.0
x-akamai:
  auth-type: EDGE_GRID
info:
  # Title of each grouping of related endpoints within an API service.
  # Must be unique across all Swaggers within the API service.
  # Customarily phrased as abstract plural, with no mention of any
  # separate "API".  Subject to refinement by tech writers.
  title: Products
  # Major version of the API service with leading `v` string:
  version: v1
servers:
  # Specify the initial root server path up to the major API version,
  # unique per API service, represented exactly as customers access
  # the API.  Leave out the hostname that's customized per client in
  # EdgeGrid APIs. (For other non-EdgeGrid APIs, fully qualify the
  # base URL only if the API is available through a single hostname.)
  - url: https://{hostname}/commerce/v1
paths:
  /products:
    get:
      # ID for each API operation (endpoint/method combination). Must
      # be unique across all Swaggers. Form values by default as
      # dashed `method-resource-name`, as short as possible for use in
      # cross-links.
      # NOTE: Once API doc publishes, do not change these permalink ID
      # values unless prepared to change cross-links in various doc
      # sets, not just within this set of Swaggers, but also in others
      # and various README-based doc.
      operationId: get-products
      # Operation summary provides title for use in API doc. Must be
      # unique across all Swaggers within API service. Subject to
      # refinement by tech writers.
      summary: List products
      tags:
        - Products
      # Description provides more context and details on the
      # operation. All description fields subject to refinement by
      # tech writers.  For all descriptions, we encourage YAML "|" bar
      # syntax to quote multiline paragraph blocks and reduce line
      # length.
      description: |
        This operation returns a list of products, optionally paginated or filtered by type of product or date when first made available.
      # Externalize both query and path parameter definitions,
      # with filenames keyed by parameter name by default:
      parameters:
        - $ref: parameters/productType-query.yaml
        - $ref: parameters/page-query.yaml
        - $ref: parameters/pageSize-query.yaml
        - $ref: parameters/debug-query.yaml
        - $ref: parameters/start-query.yaml
        - $ref: parameters/end-query.yaml
      responses:
        200:
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/products-get-200.json
              schema:
                $ref: schemas/products-summary.yaml
          description: |
            The response shows data for the product.
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
    post:
      operationId: post-products
      summary: Create a new product
      tags:
        - Products
      description: |
        Describe what the operation does here.
      requestBody:
        content:
          # Each possible content type, usually just application/json
          application/json:
            example:
              # Each request or success response in the 2xx/3xx range
              # that exchanges a body of data must have a sample
              # payload, referenced from an external `examples`
              # directory.  Represent all sample data files as JSON,
              # or any other text-based content types the API
              # supports. See Swagger doc requirements for details on
              # quality criteria for samples used in doc.
              $ref: examples/product-post.json
            schema:
              # Each JSON request and success response must reference
              # a Swagger schema from an external `schemas` directory.
              # Operations should share common schema files wherever
              # possible, for example to represent GET response, PUT
              # request, and both PUT and POST response.
              $ref: schemas/product-create.yaml
        # If omitted, we must assume `required:true` for request data.
        required: true
      responses:
        200:
          description: |
            The response shows data for the product.
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/product-get-200.json
              schema:
                $ref: schemas/product.yaml
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-Products-Per-Account-Limit:
                $ref: headers/Akamai-Products-Per-Account-Limit.yaml
            Akamai-Products-Per-Account-Remaining:
                $ref: headers/Akamai-Products-Per-Account-Remaining.yaml
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
            X-Akamai-Trace:
              $ref: headers/X-Akamai-Trace.yaml
            Location:
              $ref: headers/Location.yaml
        201:
          description: |
            The response shows data for the product.
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/product-get-200.json
              schema:
                $ref: schemas/product.yaml
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
            Akamai-Products-Per-Account-Limit:
              $ref: headers/Akamai-Products-Per-Account-Limit.yaml
            Akamai-Products-Per-Account-Remaining:
              $ref: headers/Akamai-Products-Per-Account-Remaining.yaml
            X-Akamai-Trace:
              $ref: headers/X-Akamai-Trace.yaml
            Location:
              $ref: headers/Location.yaml
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
  /products/{productId}:
    parameters:
      - $ref: parameters/productId-path.yaml
    delete:
      operationId: delete-product
      summary: Remove a product
      tags:
        - Products
      description: |
        This operation removes a product.
      responses:
        204:
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
          description: |
            Product successfully removed.
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
    get:
      operationId: get-product
      summary: Get a product
      tags:
        - Products
      description: |
        This operation retrieves the details of a product.
      responses:
        200:
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
            Etag:
              $ref: headers/Etag.yaml
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/product-get-200.json
              schema:
                $ref: schemas/product.yaml
          description: |
            The response shows data for the product.
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
    put:
      operationId: put-product
      summary: Update a product
      tags:
        - Products
      description: |
        This operation updates the details of a product.
      parameters:
        - $ref: headers/If-Match.yaml
      requestBody:
        content:
          # Each possible content type, usually just application/json
          application/json:
            example:
              $ref: examples/product-post.json
            schema:
              $ref: schemas/product-create.yaml
        required: true
      responses:
        200:
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/product-get-200.json
              schema:
                $ref: schemas/product.yaml
          description: |
            The response shows data for the product.
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
    patch:
      operationId: patch-product
      summary: Patch a product
      tags:
        - Products
      description: |
        This operation updates the details of a product.
      parameters:
        - $ref: headers/If-Match.yaml
      requestBody:
        content:
          # Each possible content type, usually just application/json
          application/json:
            example:
              $ref: examples/product-post.json
            schema:
              $ref: schemas/product-patch.yaml
        required: true
      responses:
        200:
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
            Akamai-EOL-Location:
              $ref: headers/Akamai-EOL-Location.yaml
            Akamai-EOL-Removal-Date:
              $ref: headers/Akamai-EOL-Removal-Date.yaml
            Akamai-EOL-Type:
              $ref: headers/Akamai-EOL-Type.yaml
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/product-get-200.json
              schema:
                $ref: schemas/product.yaml
          description: |
            The response shows data for the product.
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
  /products/{productId}/clone:
    parameters:
      - $ref: parameters/productId-path.yaml
    post:
      operationId: post-clone-product
      summary: Clone a product
      tags:
        - Products
      description: |
        Describe what the operation does here.
      responses:
        201:
          description: |
            The response shows data for the newly cloned product.
          # Full set of the API's custom response headers
          # (excluding implicit Accept/Content-Type)
          headers:
            Akamai-RateLimit-Limit:
              $ref: headers/Akamai-RateLimit-Limit.yaml
            Akamai-RateLimit-Remaining:
              $ref: headers/Akamai-RateLimit-Remaining.yaml
            Akamai-RateLimit-Next:
              $ref: headers/Akamai-RateLimit-Next.yaml
            Location:
              $ref: headers/Location.yaml
          content:
            # Each possible content type, usually just application/json
            application/json:
              example:
                $ref: examples/product-get-200.json
              schema:
                $ref: schemas/product.yaml
        # Spec the full range of possible error response codes
        # in the 4xx/5xx range, including API platform-level
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        404:
          $ref: errors/404.yaml
        405:
          $ref: errors/405.yaml
        409:
          $ref: errors/409.yaml
        415:
          $ref: errors/415.yaml
        429:
          $ref: errors/429.yaml
        503:
          $ref: errors/503.yaml
